/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AuthInfoDialog.java
 *
 * Created on Jul 26, 2011, 6:28:38 PM
 */
package evetycoon;

import com.beimin.eveapi.core.ApiException;
import evedata.Account;
import evedata.Character;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import services.ApiData;
import services.ApiKeyTypes;
import services.ApiService;

/**
 *
 * @author hrivanov
 */
public class AuthInfoDialog extends javax.swing.JDialog
{
  /** Custom variables declaration */
  
  /** User ID of the account. */
  String keyID;
  /** API key of the account. */
  String vCode;
  /** Account object. */
  Account accInfo;
  /** List of the retrieved characters. */
  ArrayList<Character> retrievedChars;
  /** ApiService reference */
  ApiService apiServices;
  
  /** Creates new form AuthInfoDialog */
  public AuthInfoDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    this.setLocationRelativeTo(parent);
    
    apiServices = ApiService.getInstance();
    // Load the account data if any is available.
    accInfo = ApiData.getCurrAccountInfo();
    if(accInfo.hasApiData())
    {
      authUserIDFld.setText(String.valueOf(accInfo.getKeyID()));
      authAPIFld.setText(accInfo.getVerificationCode());
      
      retrievedChars = accInfo.getAccountCharacters();
      for(Character apiChar : retrievedChars)
      {
        authCharacterCombo.addItem(apiChar.getName());
      }
      
      authCharacterCombo.setSelectedIndex(accInfo.getDefaultCharIndex());
      
      authOKBtn.setEnabled(true);
    }
  }

  AuthInfoDialog()
  {
    throw new UnsupportedOperationException("Not yet implemented");
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    authOKBtn = new javax.swing.JButton();
    authCancelBtn = new javax.swing.JButton();
    authCtrlPanel = new javax.swing.JPanel();
    authCharacterLabel = new javax.swing.JLabel();
    authCharacterCombo = new javax.swing.JComboBox();
    authAPIFld = new javax.swing.JTextField();
    authAPILabel = new javax.swing.JLabel();
    authUserIDLabel = new javax.swing.JLabel();
    authGetCharsBtn = new javax.swing.JButton();
    authUserIDFld = new javax.swing.JTextField();

    jPanel1.setName("jPanel1"); // NOI18N

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 100, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 100, Short.MAX_VALUE)
    );

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(evetycoon.EveTycoonApp.class).getContext().getResourceMap(AuthInfoDialog.class);
    setTitle(resourceMap.getString("authInfoForm.title")); // NOI18N
    setLocationByPlatform(true);
    setModal(true);
    setName("authInfoForm"); // NOI18N

    authOKBtn.setText(resourceMap.getString("authOKBtn.text")); // NOI18N
    authOKBtn.setEnabled(false);
    authOKBtn.setName("authOKBtn"); // NOI18N
    authOKBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authOKBtnActionPerformed(evt);
      }
    });

    authCancelBtn.setText(resourceMap.getString("authCancelBtn.text")); // NOI18N
    authCancelBtn.setName("authCancelBtn"); // NOI18N
    authCancelBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authCancelBtnActionPerformed(evt);
      }
    });

    authCtrlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), resourceMap.getString("authCtrlPanel.border.title"))); // NOI18N
    authCtrlPanel.setName("authCtrlPanel"); // NOI18N

    authCharacterLabel.setText(resourceMap.getString("authCharacterLabel.text")); // NOI18N
    authCharacterLabel.setName("authCharacterLabel"); // NOI18N

    authCharacterCombo.setAutoscrolls(true);
    authCharacterCombo.setName("authCharacterCombo"); // NOI18N
    authCharacterCombo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authCharacterComboActionPerformed(evt);
      }
    });

    authAPIFld.setText(resourceMap.getString("authAPIFld.text")); // NOI18N
    authAPIFld.setName("authAPIFld"); // NOI18N
    authAPIFld.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authAPIFldActionPerformed(evt);
      }
    });

    authAPILabel.setLabelFor(authAPIFld);
    authAPILabel.setText(resourceMap.getString("authAPILabel.text")); // NOI18N
    authAPILabel.setName("authAPILabel"); // NOI18N

    authUserIDLabel.setLabelFor(authUserIDFld);
    authUserIDLabel.setText(resourceMap.getString("authUserIDLabel.text")); // NOI18N
    authUserIDLabel.setName("authUserIDLabel"); // NOI18N

    authGetCharsBtn.setText(resourceMap.getString("authGetCharsBtn.text")); // NOI18N
    authGetCharsBtn.setActionCommand(resourceMap.getString("authGetCharsBtn.actionCommand")); // NOI18N
    authGetCharsBtn.setName("authGetCharsBtn"); // NOI18N
    authGetCharsBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authGetCharsBtnActionPerformed(evt);
      }
    });

    authUserIDFld.setText(resourceMap.getString("authUserIDFld.text")); // NOI18N
    authUserIDFld.setToolTipText(resourceMap.getString("authUserIDFld.toolTipText")); // NOI18N
    authUserIDFld.setName("authUserIDFld"); // NOI18N
    authUserIDFld.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authUserIDFldActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout authCtrlPanelLayout = new javax.swing.GroupLayout(authCtrlPanel);
    authCtrlPanel.setLayout(authCtrlPanelLayout);
    authCtrlPanelLayout.setHorizontalGroup(
      authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(authCtrlPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(authUserIDLabel)
          .addComponent(authAPILabel)
          .addComponent(authCharacterLabel))
        .addGap(18, 18, 18)
        .addGroup(authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(authUserIDFld, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, authCtrlPanelLayout.createSequentialGroup()
            .addComponent(authCharacterCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(authGetCharsBtn))
          .addComponent(authAPIFld, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    authCtrlPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {authAPILabel, authUserIDLabel});

    authCtrlPanelLayout.setVerticalGroup(
      authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(authCtrlPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(authUserIDFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(authUserIDLabel))
        .addGap(6, 6, 6)
        .addGroup(authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(authAPIFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(authAPILabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(authCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(authCharacterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(authCharacterLabel)
          .addComponent(authGetCharsBtn))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(authCtrlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(408, Short.MAX_VALUE)
        .addComponent(authOKBtn)
        .addGap(18, 18, 18)
        .addComponent(authCancelBtn)
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {authCancelBtn, authOKBtn});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(authCtrlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(9, 9, 9)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(authCancelBtn)
          .addComponent(authOKBtn))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void authOKBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authOKBtnActionPerformed
    try
    {
      accInfo.setDefaultCharacter(authCharacterCombo.getSelectedIndex());
      apiServices.saveAccountInfo();
      this.setVisible(false);
    }
    catch(ApiException ioEx)
    {
      JOptionPane.showMessageDialog(this, 
                                    ioEx.getMessage(), 
                                    "File I/O exception", 
                                    JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_authOKBtnActionPerformed

  private void authCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authCancelBtnActionPerformed
    this.setVisible(false);
  }//GEN-LAST:event_authCancelBtnActionPerformed

  private void authUserIDFldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_authUserIDFldActionPerformed
  {//GEN-HEADEREND:event_authUserIDFldActionPerformed
    keyID = authUserIDFld.getText();
    vCode = authAPIFld.getText();
    if((keyID.length() > 0)&&(vCode.length() > 0))
    {
      authOKBtn.setEnabled(true);
    }
    
  }//GEN-LAST:event_authUserIDFldActionPerformed

  private void authAPIFldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_authAPIFldActionPerformed
  {//GEN-HEADEREND:event_authAPIFldActionPerformed
    keyID = authUserIDFld.getText();
    vCode = authAPIFld.getText();
    if((keyID.length() > 0)&&(vCode.length() > 0))
    {
      authOKBtn.setEnabled(true);
    }
  }//GEN-LAST:event_authAPIFldActionPerformed

  private void authGetCharsBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_authGetCharsBtnActionPerformed
  {//GEN-HEADEREND:event_authGetCharsBtnActionPerformed
    try
    {
      keyID = authUserIDFld.getText();
      vCode = authAPIFld.getText();
      if((keyID.length() > 0)&&(vCode.length() > 0))
      {
        if(!apiServices.checkApiKey(Integer.parseInt(keyID), vCode, 655360, ApiKeyTypes.CORPORATION))
        {
          JOptionPane.showMessageDialog(this, 
                                    "The supplied key does not meet the requirements - type: Corporation; mask: StarbaseList, StarbaseDetail ", 
                                    "Invalid key", 
                                    JOptionPane.INFORMATION_MESSAGE);
          return;
        }
        
        authCharacterCombo.removeAllItems();
        accInfo = apiServices.loadAccountInfoAPI(Integer.parseInt(keyID), vCode);
        retrievedChars = accInfo.getAccountCharacters();

        for(Character apiChar : retrievedChars)
        {
          authCharacterCombo.addItem(apiChar.getName());
        }

        authOKBtn.setEnabled(true);
      }
    }
    catch(ApiException apiEx)
    {
      JOptionPane.showMessageDialog(this, 
                                    apiEx.getMessage(), 
                                    "API exception", 
                                    JOptionPane.ERROR_MESSAGE);
    }
    
  }//GEN-LAST:event_authGetCharsBtnActionPerformed

  private void authCharacterComboActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_authCharacterComboActionPerformed
  {//GEN-HEADEREND:event_authCharacterComboActionPerformed
    
    
  }//GEN-LAST:event_authCharacterComboActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    java.awt.EventQueue.invokeLater(new Runnable()
    {

      public void run()
      {
        AuthInfoDialog dialog = new AuthInfoDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter()
        {

          @Override
          public void windowClosing(java.awt.event.WindowEvent e)
          {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField authAPIFld;
  private javax.swing.JLabel authAPILabel;
  private javax.swing.JButton authCancelBtn;
  private javax.swing.JComboBox authCharacterCombo;
  private javax.swing.JLabel authCharacterLabel;
  private javax.swing.JPanel authCtrlPanel;
  private javax.swing.JButton authGetCharsBtn;
  private javax.swing.JButton authOKBtn;
  private javax.swing.JTextField authUserIDFld;
  private javax.swing.JLabel authUserIDLabel;
  private javax.swing.JPanel jPanel1;
  // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StarbaseStatusPanel.java
 *
 * Created on Sep 7, 2011, 12:23:18 PM
 */
package modules.gui;

import com.beimin.eveapi.core.ApiException;
import evedata.Starbase;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.Timer;
import javax.swing.event.TableModelEvent;
import modules.starbaseinfo.StarbaseInfo;
import services.ApiData;
import tables.BasicTableModel;

/**
 *
 * @author hrivanov
 */
public class StarbaseStatusPanel extends javax.swing.JPanel implements ActionListener
{
  private ListSelectionModel starbaseListSelModel;
  private BasicTableModel starbaseListModel;
  private BasicTableModel starbaseFuelModel;
  private StarbaseInfo starbaseInfo;
  private Timer cacheExpirationTimer;
  private long expirationSeconds;
  private long seconds;
  private long minutes;
  private long hours;
  private IconLabelRenderer cellRenderer;

  /** Creates new form StarbaseStatusPanel */
  public StarbaseStatusPanel()
  {
    initComponents();
  }
  
  public void initPanel()
  {
    starbaseInfo = ApiData.getCurrStarbaseInfo();
    
    starbaseListModel = starbaseInfo.getStarbaseListModel();
    starbaseListTable.setModel(starbaseListModel);
    
    cellRenderer = new IconLabelRenderer();
    
    starbaseListTable.setDefaultRenderer(ImageIcon.class, cellRenderer);
    //starbaseListTable.setDefaultRenderer(Icon.class, cellRenderer);
    
    starbaseFuelModel = starbaseInfo.getStarbaseFuelModel();
    starbaseFuelTable.setModel(starbaseFuelModel);
    
    starbaseFuelTable.setDefaultRenderer(ImageIcon.class, cellRenderer);
    
    starbaseFuelModel.addTableModelListener(starbaseInfo);
    
    starbaseListSelModel = starbaseListTable.getSelectionModel();
    starbaseListSelModel.addListSelectionListener(starbaseInfo);
    
    if(starbaseListTable.getRowCount() > 0)
      starbaseListTable.addRowSelectionInterval(0, 0);
    
    initTimer();
  }
  
  private void initTimer()
  {
    if(starbaseInfo.getStarbaseList().size() > 0)
    {
      Starbase firstStarbase = starbaseInfo.getStarbaseList().get(0);
      expirationSeconds = (firstStarbase.getCachedUntil().getTimeInMillis() - Calendar.getInstance().getTimeInMillis()) / 1000;
      
      if(expirationSeconds > 0)
      {
        cacheExpirationTimer = new Timer(1000, this);
        cacheExpirationTimer.start();
      }
      
      cachedUntilTimeLabel.setText(firstStarbase.getCachedUntilString());
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    starbaseListPanel = new javax.swing.JPanel();
    starbaseListScrollPane = new javax.swing.JScrollPane();
    starbaseListTable = new javax.swing.JTable();
    starbaseFuelsPanel = new javax.swing.JPanel();
    starbaseFuelScrollPane = new javax.swing.JScrollPane();
    starbaseFuelTable = new javax.swing.JTable();
    infoPanel = new javax.swing.JPanel();
    updateInfoBtn = new javax.swing.JButton();
    cacheExpireLabel = new javax.swing.JLabel();
    timerLabel = new javax.swing.JLabel();
    cachedUntilLabel = new javax.swing.JLabel();
    cachedUntilTimeLabel = new javax.swing.JLabel();

    setName("Form"); // NOI18N
    setPreferredSize(new java.awt.Dimension(656, 553));
    setRequestFocusEnabled(false);

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(evetycoon.EveTycoonApp.class).getContext().getResourceMap(StarbaseStatusPanel.class);
    starbaseListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), resourceMap.getString("starbaseListPanel.border.title"))); // NOI18N
    starbaseListPanel.setName("starbaseListPanel"); // NOI18N
    starbaseListPanel.setPreferredSize(new java.awt.Dimension(432, 201));

    starbaseListScrollPane.setName("starbaseListScrollPane"); // NOI18N

    starbaseListTable.setBackground(resourceMap.getColor("defaultTable.background")); // NOI18N
    starbaseListTable.setForeground(resourceMap.getColor("defaultTable.foreground")); // NOI18N
    starbaseListTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {},
        {}
      },
      new String [] {

      }
    ));
    starbaseListTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    starbaseListTable.setFillsViewportHeight(true);
    starbaseListTable.setGridColor(resourceMap.getColor("defaultTable.gridColor")); // NOI18N
    starbaseListTable.setName("starbaseListTable"); // NOI18N
    starbaseListTable.setRowHeight(32);
    starbaseListTable.setSelectionBackground(resourceMap.getColor("defaultTable.selectionBackground")); // NOI18N
    starbaseListTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    starbaseListScrollPane.setViewportView(starbaseListTable);

    javax.swing.GroupLayout starbaseListPanelLayout = new javax.swing.GroupLayout(starbaseListPanel);
    starbaseListPanel.setLayout(starbaseListPanelLayout);
    starbaseListPanelLayout.setHorizontalGroup(
      starbaseListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(starbaseListPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(starbaseListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        .addContainerGap())
    );
    starbaseListPanelLayout.setVerticalGroup(
      starbaseListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(starbaseListPanelLayout.createSequentialGroup()
        .addComponent(starbaseListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
        .addContainerGap())
    );

    starbaseFuelsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), resourceMap.getString("starbaseFuelsPanel.border.title"))); // NOI18N
    starbaseFuelsPanel.setName("starbaseFuelsPanel"); // NOI18N
    starbaseFuelsPanel.setPreferredSize(new java.awt.Dimension(632, 216));

    starbaseFuelScrollPane.setName("starbaseFuelScrollPane"); // NOI18N

    starbaseFuelTable.setBackground(resourceMap.getColor("starbaseFuelTable.background")); // NOI18N
    starbaseFuelTable.setForeground(resourceMap.getColor("starbaseFuelTable.foreground")); // NOI18N
    starbaseFuelTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {},
        {},
        {},
        {},
        {},
        {},
        {}
      },
      new String [] {

      }
    ));
    starbaseFuelTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    starbaseFuelTable.setFillsViewportHeight(true);
    starbaseFuelTable.setGridColor(resourceMap.getColor("starbaseFuelTable.gridColor")); // NOI18N
    starbaseFuelTable.setName("starbaseFuelTable"); // NOI18N
    starbaseFuelTable.setRowHeight(32);
    starbaseFuelTable.setSelectionBackground(resourceMap.getColor("defaultTable.selectionBackground")); // NOI18N
    starbaseFuelTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    starbaseFuelScrollPane.setViewportView(starbaseFuelTable);

    javax.swing.GroupLayout starbaseFuelsPanelLayout = new javax.swing.GroupLayout(starbaseFuelsPanel);
    starbaseFuelsPanel.setLayout(starbaseFuelsPanelLayout);
    starbaseFuelsPanelLayout.setHorizontalGroup(
      starbaseFuelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(starbaseFuelsPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(starbaseFuelScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        .addContainerGap())
    );
    starbaseFuelsPanelLayout.setVerticalGroup(
      starbaseFuelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(starbaseFuelsPanelLayout.createSequentialGroup()
        .addComponent(starbaseFuelScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        .addContainerGap())
    );

    infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), resourceMap.getString("infoPanel.border.title"))); // NOI18N
    infoPanel.setName("infoPanel"); // NOI18N

    updateInfoBtn.setText(resourceMap.getString("updateInfoBtn.text")); // NOI18N
    updateInfoBtn.setName("updateInfoBtn"); // NOI18N
    updateInfoBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        updateInfoBtnActionPerformed(evt);
      }
    });

    cacheExpireLabel.setText(resourceMap.getString("cacheExpireLabel.text")); // NOI18N
    cacheExpireLabel.setName("cacheExpireLabel"); // NOI18N

    timerLabel.setText(resourceMap.getString("timerLabel.text")); // NOI18N
    timerLabel.setName("timerLabel"); // NOI18N

    cachedUntilLabel.setText(resourceMap.getString("cachedUntilLabel.text")); // NOI18N
    cachedUntilLabel.setName("cachedUntilLabel"); // NOI18N

    cachedUntilTimeLabel.setText(resourceMap.getString("cachedUntilTimeLabel.text")); // NOI18N
    cachedUntilTimeLabel.setName("cachedUntilTimeLabel"); // NOI18N

    javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
    infoPanel.setLayout(infoPanelLayout);
    infoPanelLayout.setHorizontalGroup(
      infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(updateInfoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
          .addComponent(cachedUntilLabel)
          .addComponent(cachedUntilTimeLabel)
          .addComponent(cacheExpireLabel)
          .addComponent(timerLabel))
        .addContainerGap())
    );
    infoPanelLayout.setVerticalGroup(
      infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(infoPanelLayout.createSequentialGroup()
        .addComponent(updateInfoBtn)
        .addGap(18, 18, 18)
        .addComponent(cachedUntilLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(cachedUntilTimeLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(cacheExpireLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(timerLabel)
        .addContainerGap(73, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(starbaseFuelsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(starbaseListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(starbaseListPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(starbaseFuelsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void updateInfoBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_updateInfoBtnActionPerformed
  {//GEN-HEADEREND:event_updateInfoBtnActionPerformed
    try
    {
      if(!ApiData.getCurrAccountInfo().hasApiData())
      {
        JOptionPane.showMessageDialog(this, 
                                    "There is no associated account for data retrieval. Please add one.", 
                                    "No account data", 
                                    JOptionPane.INFORMATION_MESSAGE);
          return;
      }
      starbaseInfo.updateStarbaseInfo();

      if(starbaseListTable.getRowCount() > 0)
        starbaseListTable.addRowSelectionInterval(0, 0);
       
      initTimer();
    } 
    catch (ApiException apiEx)
    {
      JOptionPane.showMessageDialog(this,
                apiEx.getMessage(),
                "Exception",
                JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_updateInfoBtnActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel cacheExpireLabel;
  private javax.swing.JLabel cachedUntilLabel;
  private javax.swing.JLabel cachedUntilTimeLabel;
  private javax.swing.JPanel infoPanel;
  private javax.swing.JScrollPane starbaseFuelScrollPane;
  private javax.swing.JTable starbaseFuelTable;
  private javax.swing.JPanel starbaseFuelsPanel;
  private javax.swing.JPanel starbaseListPanel;
  private javax.swing.JScrollPane starbaseListScrollPane;
  private javax.swing.JTable starbaseListTable;
  private javax.swing.JLabel timerLabel;
  private javax.swing.JButton updateInfoBtn;
  // End of variables declaration//GEN-END:variables

  public void tableChanged(TableModelEvent e)
  {
    //starbaseListModel.fireTableRowsUpdated(currentIndex, currentIndex);
  }

  public void actionPerformed(ActionEvent e)
  {
    if(expirationSeconds == 0)
      cacheExpirationTimer.stop();
    
    hours = expirationSeconds / 3600;
    minutes = (expirationSeconds % 3600) / 60;
    seconds = (expirationSeconds % 3600) % 60;
    
    timerLabel.setText(String.format("%1$02d:%2$02d:%3$02d", hours, minutes, seconds));
    expirationSeconds--;
    
  }
}

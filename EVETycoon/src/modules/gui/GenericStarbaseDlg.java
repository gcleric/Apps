/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GenericStarbaseDlg.java
 *
 * Created on Sep 14, 2011, 12:57:54 PM
 */
package modules.gui;

import com.beimin.eveapi.core.ApiException;
import evedata.Starbase;
import evedata.StarbaseFuel;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import modules.fuelplanner.FuelPlanner;
import services.DBService;

/**
 *
 * @author hrivanov
 */
public class GenericStarbaseDlg extends javax.swing.JDialog
{
  private DBService dbService;
  
  private List<Starbase> addedStarbases;
  
  private List<Starbase> towerTypeList;
  
  private DefaultListModel addedStarbasesListModel;
  
  private FuelPlanner fuelPlanner;

  /** Creates new form GenericStarbaseDlg */
  public GenericStarbaseDlg(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    
    this.setLocationRelativeTo(parent);
    
    initDialog();
  }
  
  private void initDialog()
  {
    try
    {
      dbService = DBService.getInstance();
    
      addedStarbases = new ArrayList<Starbase>(5);
    
      addedStarbasesListModel = new DefaultListModel();
      
      towerNumberField.setValue(1L);
      
      //Create the label table
      Hashtable labelTable = new Hashtable();
      labelTable.put( new Integer(0), new JLabel("0.0") );
      labelTable.put( new Integer(1), new JLabel("1.0") );
      securityLevelSlider.setLabelTable(labelTable);

      towerTypeList = dbService.getControlTowerTypesList();
      for(Starbase towerType : towerTypeList)
      {
        towerTypeComboBox.addItem(towerType.getTypeName());
      }
      
      for(FactionTypes factionType : FactionTypes.values())
      {
        factionComboBox.addItem(factionType);
      }
    } 
    catch (SQLException sqlEx)
    {
       JOptionPane.showMessageDialog(this,
                sqlEx.getMessage(),
                "Exception",
                JOptionPane.ERROR_MESSAGE);
    }
    catch (ApiException apiEx)
    {
       JOptionPane.showMessageDialog(this,
                apiEx.getMessage(),
                "Exception",
                JOptionPane.ERROR_MESSAGE);
    }
  }
  
  private void updateAddedStarbasesList()
  {
    addedStarbasesListModel.clear();
    for(Starbase newStarbase : addedStarbases)
    {
      addedStarbasesListModel.addElement(newStarbase.getTypeName());
    }
    
    addedTowersList.setModel(addedStarbasesListModel);
  }
  
  public void setFuelPlanner(FuelPlanner fuelPlanner)
  {
    this.fuelPlanner = fuelPlanner;
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    towerCtrlPanel = new javax.swing.JPanel();
    towerTypeLabel = new javax.swing.JLabel();
    secLevelLabel = new javax.swing.JLabel();
    securityLevelSlider = new javax.swing.JSlider();
    factionTypeLabel = new javax.swing.JLabel();
    towerTypeComboBox = new javax.swing.JComboBox();
    factionComboBox = new javax.swing.JComboBox();
    hwConsumptionLabel = new javax.swing.JLabel();
    loConsumptionLabel = new javax.swing.JLabel();
    towerNumberLabel = new javax.swing.JLabel();
    hwConsumptionField = new javax.swing.JFormattedTextField();
    loConsumptionField = new javax.swing.JFormattedTextField();
    towerNumberField = new javax.swing.JFormattedTextField();
    addedTowersPanel = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    addedTowersList = new javax.swing.JList();
    cancelBtn = new javax.swing.JButton();
    okBtn = new javax.swing.JButton();
    addTowerBtn = new javax.swing.JButton();
    remTowerBtn = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(evetycoon.EveTycoonApp.class).getContext().getResourceMap(GenericStarbaseDlg.class);
    setTitle(resourceMap.getString("genericStarbaseForm.title")); // NOI18N
    setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
    setName("genericStarbaseForm"); // NOI18N

    towerCtrlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), resourceMap.getString("towerCtrlPanel.border.title"))); // NOI18N
    towerCtrlPanel.setName("towerCtrlPanel"); // NOI18N

    towerTypeLabel.setText(resourceMap.getString("towerTypeLabel.text")); // NOI18N
    towerTypeLabel.setName("towerTypeLabel"); // NOI18N

    secLevelLabel.setLabelFor(securityLevelSlider);
    secLevelLabel.setText(resourceMap.getString("secLevelLabel.text")); // NOI18N
    secLevelLabel.setName("secLevelLabel"); // NOI18N

    securityLevelSlider.setMajorTickSpacing(1);
    securityLevelSlider.setMaximum(1);
    securityLevelSlider.setMinorTickSpacing(1);
    securityLevelSlider.setPaintLabels(true);
    securityLevelSlider.setPaintTicks(true);
    securityLevelSlider.setSnapToTicks(true);
    securityLevelSlider.setName("securityLevelSlider"); // NOI18N
    securityLevelSlider.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        securityLevelSliderStateChanged(evt);
      }
    });

    factionTypeLabel.setText(resourceMap.getString("factionTypeLabel.text")); // NOI18N
    factionTypeLabel.setName("factionTypeLabel"); // NOI18N

    towerTypeComboBox.setToolTipText(resourceMap.getString("towerTypeComboBox.toolTipText")); // NOI18N
    towerTypeComboBox.setName("towerTypeComboBox"); // NOI18N
    towerTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        towerTypeComboBoxActionPerformed(evt);
      }
    });

    factionComboBox.setName("factionComboBox"); // NOI18N

    hwConsumptionLabel.setText(resourceMap.getString("hwConsumptionLabel.text")); // NOI18N
    hwConsumptionLabel.setName("hwConsumptionLabel"); // NOI18N

    loConsumptionLabel.setText(resourceMap.getString("loConsumptionLabel.text")); // NOI18N
    loConsumptionLabel.setName("loConsumptionLabel"); // NOI18N

    towerNumberLabel.setText(resourceMap.getString("towerNumberLabel.text")); // NOI18N
    towerNumberLabel.setName("towerNumberLabel"); // NOI18N

    hwConsumptionField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
    hwConsumptionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    hwConsumptionField.setName("hwConsumptionField"); // NOI18N

    loConsumptionField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
    loConsumptionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    loConsumptionField.setText(resourceMap.getString("loConsumptionField.text")); // NOI18N
    loConsumptionField.setName("loConsumptionField"); // NOI18N

    towerNumberField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
    towerNumberField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    towerNumberField.setText(resourceMap.getString("towerNumberField.text")); // NOI18N
    towerNumberField.setName("towerNumberField"); // NOI18N

    javax.swing.GroupLayout towerCtrlPanelLayout = new javax.swing.GroupLayout(towerCtrlPanel);
    towerCtrlPanel.setLayout(towerCtrlPanelLayout);
    towerCtrlPanelLayout.setHorizontalGroup(
      towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(towerCtrlPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(towerCtrlPanelLayout.createSequentialGroup()
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(towerTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(towerTypeLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(securityLevelSlider, 0, 0, Short.MAX_VALUE)
              .addComponent(secLevelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
          .addGroup(towerCtrlPanelLayout.createSequentialGroup()
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(hwConsumptionField)
              .addComponent(hwConsumptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(loConsumptionField, 0, 0, Short.MAX_VALUE)
              .addComponent(loConsumptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(towerNumberField)
              .addComponent(towerNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addGap(9, 9, 9)
        .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(factionTypeLabel)
          .addComponent(factionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    towerCtrlPanelLayout.setVerticalGroup(
      towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(towerCtrlPanelLayout.createSequentialGroup()
        .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(secLevelLabel)
          .addComponent(towerTypeLabel)
          .addComponent(factionTypeLabel))
        .addGap(6, 6, 6)
        .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(towerCtrlPanelLayout.createSequentialGroup()
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(towerTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(securityLevelSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(hwConsumptionLabel)
              .addGroup(towerCtrlPanelLayout.createSequentialGroup()
                .addComponent(loConsumptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hwConsumptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(towerCtrlPanelLayout.createSequentialGroup()
                .addComponent(towerNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(towerCtrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(loConsumptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(towerNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
          .addComponent(factionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    addedTowersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), resourceMap.getString("addedTowersPanel.border.title"))); // NOI18N
    addedTowersPanel.setName("addedTowersPanel"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    addedTowersList.setName("addedTowersList"); // NOI18N
    jScrollPane1.setViewportView(addedTowersList);

    javax.swing.GroupLayout addedTowersPanelLayout = new javax.swing.GroupLayout(addedTowersPanel);
    addedTowersPanel.setLayout(addedTowersPanelLayout);
    addedTowersPanelLayout.setHorizontalGroup(
      addedTowersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
    );
    addedTowersPanelLayout.setVerticalGroup(
      addedTowersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
    );

    cancelBtn.setText(resourceMap.getString("cancelBtn.text")); // NOI18N
    cancelBtn.setName("cancelBtn"); // NOI18N
    cancelBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelBtnActionPerformed(evt);
      }
    });

    okBtn.setText(resourceMap.getString("okBtn.text")); // NOI18N
    okBtn.setName("okBtn"); // NOI18N
    okBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okBtnActionPerformed(evt);
      }
    });

    addTowerBtn.setText(resourceMap.getString("addTowerBtn.text")); // NOI18N
    addTowerBtn.setName("addTowerBtn"); // NOI18N
    addTowerBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addTowerBtnActionPerformed(evt);
      }
    });

    remTowerBtn.setText(resourceMap.getString("remTowerBtn.text")); // NOI18N
    remTowerBtn.setName("remTowerBtn"); // NOI18N
    remTowerBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        remTowerBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(layout.createSequentialGroup()
            .addComponent(okBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(cancelBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(remTowerBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(addTowerBtn))
          .addComponent(towerCtrlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(addedTowersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, okBtn});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(addedTowersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(towerCtrlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(okBtn)
              .addComponent(cancelBtn)
              .addComponent(addTowerBtn)
              .addComponent(remTowerBtn))))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void securityLevelSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_securityLevelSliderStateChanged
  {//GEN-HEADEREND:event_securityLevelSliderStateChanged
    JSlider source = (JSlider)evt.getSource();
    if(!source.getValueIsAdjusting())
    {
      if(source.getValue() < 1)
      {
        factionComboBox.setEnabled(false);
      }
      else
      {
        factionComboBox.setEnabled(true);
      }
    }
  }//GEN-LAST:event_securityLevelSliderStateChanged

  private void towerTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_towerTypeComboBoxActionPerformed
  {//GEN-HEADEREND:event_towerTypeComboBoxActionPerformed
    JComboBox source = (JComboBox)evt.getSource();
    if(source.getSelectedIndex() >= 0)
    {
      Map<Integer, StarbaseFuel> fuels = towerTypeList.get(source.getSelectedIndex()).getFuelsMap();
      hwConsumptionField.setValue(fuels.get(StarbaseFuel.HEAVY_WATER).getConsumedPerHour());
      loConsumptionField.setValue(fuels.get(StarbaseFuel.LIQUID_OZONE).getConsumedPerHour());
    }
  }//GEN-LAST:event_towerTypeComboBoxActionPerformed

  private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelBtnActionPerformed
  {//GEN-HEADEREND:event_cancelBtnActionPerformed
    addedStarbases.clear();
    this.setVisible(false);
  }//GEN-LAST:event_cancelBtnActionPerformed

  private void okBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okBtnActionPerformed
  {//GEN-HEADEREND:event_okBtnActionPerformed
    fuelPlanner.addGenericStarbaseList(addedStarbases);
    this.setVisible(false);
  }//GEN-LAST:event_okBtnActionPerformed

  private void addTowerBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addTowerBtnActionPerformed
  {//GEN-HEADEREND:event_addTowerBtnActionPerformed
    long towerNumber = ((Long)towerNumberField.getValue()).longValue();
    int newHeavyWaterCPH = ((Integer)hwConsumptionField.getValue()).intValue();
    int newLiquidOzoneCPH = ((Integer)loConsumptionField.getValue()).intValue();
    float securityLevel = 0.0f;
    StarbaseFuel currFuel;
    int factionID = 0;
    
 
    Starbase selectedTower = towerTypeList.get(towerTypeComboBox.getSelectedIndex());
    Starbase newStarbase = new Starbase(selectedTower);

    // Set the secuity level
    securityLevel = ((float)securityLevelSlider.getValue());
    newStarbase.setSecurityLevel(securityLevel);

    // Set the location faction if needed
    if((factionComboBox.isEnabled())&&(factionComboBox.getSelectedIndex() > -1)&&(securityLevel > 0))
    {
      factionID = ((FactionTypes)factionComboBox.getSelectedItem()).factionID();
      newStarbase.setLocationFactionID(factionID);
      newStarbase.setLocationDescription(((FactionTypes)factionComboBox.getSelectedItem()).factionName());
    }
    
    // Remove unnecessary fuels
    for (Iterator<StarbaseFuel> fuelIter = newStarbase.getFuelsMap().values().iterator(); fuelIter.hasNext(); )
    {
      currFuel = fuelIter.next();
      
      if((currFuel.getSecurityLevel() > securityLevel)||((currFuel.getFactionID() != factionID)&&(currFuel.getFactionID() != 0)))
      {
        fuelIter.remove();
      }
    }
    
    // Set the HW/LO consumption
    Map<Integer, StarbaseFuel> towerFuels = newStarbase.getFuelsMap();
    towerFuels.get(StarbaseFuel.HEAVY_WATER).setConsumedPerHour(newHeavyWaterCPH);
    towerFuels.get(StarbaseFuel.LIQUID_OZONE).setConsumedPerHour(newLiquidOzoneCPH);
    
    // Add the towers
    addedStarbases.add(new Starbase(newStarbase));
    for(long cnt = 0;cnt < towerNumber - 1;cnt++)
    {
      addedStarbases.add(new Starbase(newStarbase));
    }
    
    updateAddedStarbasesList();
  }//GEN-LAST:event_addTowerBtnActionPerformed

  private void remTowerBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_remTowerBtnActionPerformed
  {//GEN-HEADEREND:event_remTowerBtnActionPerformed
    int selectedIndex = addedTowersList.getSelectedIndex();
    if(selectedIndex >= 0)
    {
      addedStarbasesListModel.remove(addedTowersList.getSelectedIndex());
      if((addedStarbasesListModel.size() - 1) > selectedIndex)
        addedTowersList.setSelectedIndex(selectedIndex);
    }
  }//GEN-LAST:event_remTowerBtnActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    java.awt.EventQueue.invokeLater(new Runnable()
    {

      public void run()
      {
        GenericStarbaseDlg dialog = new GenericStarbaseDlg(new javax.swing.JFrame(), true);
        dialog.initDialog();
        dialog.addWindowListener(new java.awt.event.WindowAdapter()
        {

          @Override
          public void windowClosing(java.awt.event.WindowEvent e)
          {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addTowerBtn;
  private javax.swing.JList addedTowersList;
  private javax.swing.JPanel addedTowersPanel;
  private javax.swing.JButton cancelBtn;
  private javax.swing.JComboBox factionComboBox;
  private javax.swing.JLabel factionTypeLabel;
  private javax.swing.JFormattedTextField hwConsumptionField;
  private javax.swing.JLabel hwConsumptionLabel;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JFormattedTextField loConsumptionField;
  private javax.swing.JLabel loConsumptionLabel;
  private javax.swing.JButton okBtn;
  private javax.swing.JButton remTowerBtn;
  private javax.swing.JLabel secLevelLabel;
  private javax.swing.JSlider securityLevelSlider;
  private javax.swing.JPanel towerCtrlPanel;
  private javax.swing.JFormattedTextField towerNumberField;
  private javax.swing.JLabel towerNumberLabel;
  private javax.swing.JComboBox towerTypeComboBox;
  private javax.swing.JLabel towerTypeLabel;
  // End of variables declaration//GEN-END:variables
}
